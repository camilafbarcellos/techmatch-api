{
  "openapi": "3.0.0",
  "info": {
    "title": "TechMatch API",
    "version": "1.0.0",
    "description": "ExpressJS API developed for the webapp **TechMatch**, with a database that relays on the **MongoDB Atlas** cloud.\n\nAvailable online at [https://techmatch-api.onrender.com](https://techmatch-api.onrender.com) on **Render**!\n\nThe full project can be found at the following [GitHub repository](https://github.com/camilafbarcellos/techmatch-api).\n\nThe front-end of the application is available at [https://techmatch.vercel.app/](https://techmatch.vercel.app/) on **Vercel** and at its [GitHub repository](https://github.com/camilafbarcellos/techmatch)",
    "contact": {
      "name": "Camila Barcellos",
      "url": "https://www.linkedin.com/in/camilafbarcellos/"
    }
  },
  "paths": {
    "/auth": {
      "post": {
        "summary": "Authenticate admin user",
        "description": "This endpoint is used to generate a 1h valid JWT token for admin only",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "string",
                    "description": "Admin username",
                    "required": true,
                    "example": "Username"
                  },
                  "password": {
                    "type": "string",
                    "description": "Admin password",
                    "required": true,
                    "example": "Password"
                  }
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "user": "Username",
                    "password": "Password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/questions": {
      "get": {
        "summary": "Get all questions",
        "description": "This endpoint is used to list all questions",
        "tags": [
          "Questions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new question",
        "description": "This endpoint is used to register a new question and requires a valid JWT token in header",
        "tags": [
          "Questions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Question"
              },
              "examples": {
                "invalidQuestion": {
                  "value": {
                    "category": "Categoria",
                    "question": "Enunciado"
                  }
                },
                "validQuestion": {
                  "value": {
                    "category": "Desenvolvimento",
                    "question": "Enunciado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        }
      }
    },
    "/questions/{id}": {
      "get": {
        "summary": "Get a question",
        "description": "This endpoint is used to retrieve information about a specific question",
        "tags": [
          "Questions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Question identifier",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a question",
        "description": "This endpoint is used to update information about a specific question and requires a valid JWT token in header",
        "tags": [
          "Questions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Question identifier",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Question"
              },
              "examples": {
                "newStatement": {
                  "value": {
                    "question": "Enunciado alterado"
                  }
                },
                "invalidNewCategory": {
                  "value": {
                    "category": "Categoria inválida"
                  }
                },
                "validNewCategory": {
                  "value": {
                    "category": "Desafios"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a question",
        "description": "This endpoint is used to delete a specific question and requires a valid JWT token in header",
        "tags": [
          "Questions"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Question identifier",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "204": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Question": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Question identifier",
            "example": "ObjectId"
          },
          "category": {
            "type": "string",
            "description": "Question category",
            "enum": [
              "Desenvolvimento",
              "Infraestrutura de TI",
              "Cibersegurança",
              "Ciência de Dados",
              "Desafios"
            ],
            "required": true,
            "example": "Desenvolvimento"
          },
          "questions": {
            "type": "string",
            "description": "Question statement",
            "required": true,
            "example": "Eu tenho curiosidade em descobrir como os aplicativos, sites e jogos que utilizo são criados."
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "apis": [
    "./src/routes/*.ts"
  ]
}